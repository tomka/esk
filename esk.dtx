%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% ESP - Encapsulated Sketch Pictures
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% This project is greatly inspired and based on EMP. EMS is a LaTeX
%% package to provide a convenient way to work with metapost files and
%% code from inside LaTeX documents.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \section{Implementation}
% \changes{v0.01}{2009/08/15}
%
% This project is greatly inspired and based on EMP. EMP is a LaTeX package
% to provide a convenient way to work with metapost files and code from
% inside LaTeX documents.
%
% It's is good practice to identify this version of the document style
% option.  We do this by parsing an RCS |Id| string and storing the
% result in the conventional \TeX{} control sequences:
%    \begin{macrocode}
%<*style>
%% locally define the macro \fileversion (no parameters, replacement: v1.00)
\def\fileversion{v1.00}
%% Make clear what LaTeX version is needed: LaTeX2e
\NeedsTeXFormat{LaTeX2e}
{\def\RCS#1#2\endRCS{%
  \ifx$#1%
    \@RCS $#2 \endRCS
  \else
    \@RCS $*: #1#2$ \endRCS
  \fi}%
 \def\@RCS $#1: #2,v #3 #4 #5 #6 #7$ \endRCS{%
   %% global defines of file attributes (http://en.wikibooks.org/wiki/TeX/gdef)
   \gdef\filename{#2}%
   \gdef\filerevision{#3}%
   \gdef\filedate{#4}%
   \gdef\filemaintainer{#6}}%
\RCS $Id: esk.dtx,v 0.10 2009/08/15 21:14:41 kazimiers Exp $ \endRCS}%
%    \end{macrocode}
%
% And now the standard procedure:
%    \begin{macrocode}
\ProvidesPackage{esk}[\filedate\space\fileversion\space
  Encapsulated Sketch LaTeX Package (\filemaintainer)]
%    \end{macrocode}
% Every option we don't understand is sent down to |graphics|:
%    \begin{macrocode}
\DeclareOption*{\PassOptionsToPackage{\CurrentOption}{graphics}}
\ProcessOptions
\RequirePackage{graphics}[1994/12/15]
\RequirePackage{verbatim}
%    \end{macrocode}
%


% \begin{macro}{\eskwrite}
%    \begin{macrocode}
%% define the % sign as a common letter (http://de.wikibooks.org/wiki/LaTeX-W%C3%B6rterbuch:_TeX_Primitiven:_%5Ccatcode)
%% and globally (but through the @ only visible inside the package (http://de.wikibooks.org/wiki/LaTeX-W%C3%B6rterbuch:_@))
%% define a percent sign macro (probably not needed in esk)
{\catcode`\%=11\gdef\p@rcent{%}}
\def\eskwrite#1{%
  %% is the variable "eskio" set?
  \if@eskio
    %% write the contents of "\@outemp" immediately, instead of waiting for shipout (http://www.tug.org/utilities/plain/cseq.html#immediate-rp)
    %% where to write is stored in "\@outemp" (http://www.tug.org/utilities/plain/cseq.html#write-rp)
    \immediate\write\@outemp{#1}%
  \fi
  %% ignore all the space on the input that follow immediately (http://en.wikibooks.org/wiki/TeX/ignorespaces)
  \ignorespaces}

%% create new private boolean toggle "@eskio"... (http://newsgroups.derkeiler.com/Archive/Comp/comp.text.tex/2007-05/msg00698.html)
\newif\if@eskio
%% ...and set it to true
\@eskiotrue
%% define the next free file number (in range 0-15) to private macro "\@outemp"
%% see: (http://books.google.de/books?id=bXLDwmIJNkUC&pg=PA283&lpg=PA283&dq=tex+%22\newwrite%22&source=bl&ots=xNXas4Y6Rz&sig=KrxZPqhl_0izHGvda9235RoyTHU&hl=de&ei=tKKGSszRGML6_AaNgaGWBw&sa=X&oi=book_result&ct=result&resnum=10#v=onepage&q=tex%20%22\newwrite%22&f=false)
\newwrite\@outemp
%    \end{macrocode}
% \end{macro}
%



% \begin{macro}{\empfile}
% This environment encloses each Sketch input file.  The single optional
% argument gives the name of the file.
%    \begin{macrocode}
\newcommand{\eskfile}[1][\jobname]{%
  \def\theeskfile{#1}%
%    \end{macrocode}
% Open the Sketch file.  If we're running under AMS-\LaTeX, turn off
% I/O during the first pass over equation environments.
%    \begin{macrocode}
  \if@eskio
    \@ifundefined{ifmeasuring@}%
      {}%
      {\def\if@eskio{\ifmeasuring@\else}}%
    \immediate\openout\@outemp=\theeskfile.sk\relax
    \eskwrite{\p@rcent\p@rcent\p@rcent\space \theeskfile.sk -- %
              do not edit, generated automatically by \jobname.tex}%
%    \end{macrocode}
% append |\begin{document}| to a non-empty |\LaTeX| prelude and write
% it out:
%    \begin{macrocode}
    \expandafter\ifx\expandafter*\the\esk@TeX*\else
      \esk@TeX=\expandafter{\the\esk@TeX^^J\begin{document}}%
      \eskwrite{verbatimtex^^J\the\esk@TeX^^Jetex;}%
    \fi
    \expandafter\ifx\expandafter*\the\esk@prelude*\else
      \eskwrite{\the\esk@prelude;}%
    \fi
  \fi
%    \end{macrocode}
% Count the figures
%    \begin{macrocode}
  \setcounter{eskfig}{0}}
\let\theeskfile\relax
\newcounter{eskfig}
%    \end{macrocode}
% Standard preludes:
%    \begin{macrocode}
\newtoks\esk@TeX
\ifcase\@ptsize
  \esk@TeX={\documentclass[10pt]{article}}
\or
  \esk@TeX={\documentclass[11pt]{article}}
\or
  \esk@TeX={\documentclass[12pt]{article}}
\else
  \esk@TeX={\documentclass{article}}
\fi
\newtoks\esk@prelude
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\eskTeX}
%   \begin{macro}{\eskaddtoTeX}
%     \begin{macro}{\eskprelude}
%       \begin{macro}{\eskaddtoprelude}
%    \begin{macrocode}
\def\eskTeX#1{\esk@TeX={#1}}
\def\eskaddtoTeX#1{\esk@TeX=\expandafter{\the\esk@TeX^^J#1}}
\def\eskprelude#1{\esk@prelude={#1}}
\def\eskaddtoprelude#1{\esk@prelude=\expandafter{\the\esk@prelude^^J#1}}
%    \end{macrocode}
%       \end{macro}
%     \end{macro}
%   \end{macro}
% \end{macro}
%
% \begin{macro}{\endeskfile}
% And here is how we close the |empfile| environment:
%    \begin{macrocode}
\def\endeskfile{%
  \expandafter\ifx\expandafter*\the\esk@TeX*\else
    \eskwrite{verbatimtex^^J\string\end{document}^^Jetex;}%
  \fi
  \eskwrite{\p@rcent\p@rcent\p@rcent\space the end.^^J%
            end.^^J%
            endinput;}%
  \let\theeskfile\relax
  \if@eskio
    \immediate\closeout\@outemp
  \fi}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\esk}
%    \begin{macrocode}
\newcommand{\esk}[1][*]{%
  \def\esk@@name{#1}%
  \esk@}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\esk@}
%    \begin{macrocode}
\def\esk@(#1,#2){%
  \esk@start{#1}{#2}%
  \esk@includegraphics{\theeskfile}{\theeskfig}%
  \eskcmds}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\esk@start}
%    \begin{macrocode}
\def\esk@start#1#2{%
  \esk@checkfile
%    \end{macrocode}
% We can't use |\stepcounter| because of the |amstext| option of
% AMS-\LaTeX{} disables it sometimes.
%    \begin{macrocode}
  \global\expandafter\advance\csname c@eskfig\endcsname \@ne
  \esk@@def{\esk@@name}%
%    \end{macrocode}
% Start the \MP{} figure:
%    \begin{macrocode}
  \eskwrite{beginfig(\theeskfig);^^J%
                     LaTeX_unitlength := \the\unitlength;^^J%
                     w := #1*LaTeX_unitlength;^^J%
                     h := #2*LaTeX_unitlength;}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\esk@checkfile}
% Make sure that a Swetch file is open, otherwise \emph{really}
% obscure error messages are possible:
%    \begin{macrocode}
\def\esk@checkfile{%
  \ifx\theskfile\relax
    \errhelp={Outside a empfile environment, I have no clue as to where^^J%
              the Sketch commands should go.   I will use eskdefault.sk^^J%
              for this graph, but you'd better fix your code!}%
    \errmessage{I detected a esk environment outside of eskfile}%
    \eskfile[eskdefault]
  \fi}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\esk@includegraphics}
%    \begin{macrocode}
\def\esk@includegraphics#1#2{%
  \leavevmode
  \IfFileExists{#1.#2}%
    {\includegraphics{#1.#2}}%
    {\typeout{%
      esk: File #1.#2\space not found:^^J%
      esk: Process #1.sk with Sketch and then %
           reprocess this file.}}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\eskcmds}
% Write to the file:
%    \begin{macrocode}
\def\eskcmds{%
  \begingroup
    \@bsphack
    \let\do\@makeother\dospecials
    \catcode`\^^M\active
    \def\verbatim@processline{\eskwrite{\the\verbatim@line}}%
    \verbatim@start}%
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\endeskcmds}
%    \begin{macrocode}
\def\endeskcmds{%
    \@esphack
  \endgroup}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\endesk}
%    \begin{macrocode}
\def\endesk{%
  \endeskcmds
  \eskwrite{endfig;}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\eskdef}
%    \begin{macrocode}
\newcommand{\eskdef}[1][\relax]{%
  \def\esk@@name{#1}%
  \esk@def}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\esk@def}
%    \begin{macrocode}
\def\esk@def(#1,#2){%
  \esk@start{#1}{#2}%
  \eskcmds}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\endeskdef}
%    \begin{macrocode}
\def\endeskdef{\endesk}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\esk@@def}
%    \begin{macrocode}
\def\esk@@def#1{%
  \global\e@namedef{esk@k:f:#1}{\theeskfile}%
  \global\e@namedef{esk@k:c:#1}{\theeskfig}}
\def\e@namedef#1{\expandafter\edef\csname #1\endcsname}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\eskgraph}
%    \begin{macrocode}
\newcommand{\eskgraph}[1][*]{%
  \def\esk@@name{#1}%
  \esk@graph}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\esk@graph}
%    \begin{macrocode}
\def\esk@graph(#1,#2){%
  \esk@start{#1}{#2}%
  \eskwrite{draw begingraph (w, h);}%
  \esk@includegraphics{\theeskfile}{\theeskfig}%
  \eskcmds}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\endeskgraph}
%    \begin{macrocode}
\def\endeskgraph{%
  \endeskcmds
  \eskwrite{endgraph;^^Jendfig;}}
%    \end{macrocode}
% \end{macro}
%
% \begin{macro}{\eskuse}
%    \begin{macrocode}
\def\eskuse#1{%
  \@ifundefined{esk@k:f:#1}%
   {\typeout{esk: \string\eskuse: `#1' undefined!}}%
   {\esk@includegraphics{\@nameuse{esk@k:f:#1}}{\@nameuse{esk@k:c:#1}}}}
%</style>
%    \end{macrocode}
% \end{macro}
%
% \Finale
%
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \appendix
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% \section{Driver File}
%
%    \begin{macrocode}
%<*driver>
\documentclass[a4paper]{article}
\usepackage{doc}
\usepackage{amsmath}
%    \end{macrocode}
% The \MF{} and \MP{} logos come out much nicer if you have |mflogo|
% installed:
%    \begin{macrocode}
\IfFileExists{mflogo.sty}%
  {\usepackage{mflogo}%
   \def\FMF{\texttt{feyn}\textlogo{MF}}%
   \def\ESK{\textlogo{ESK}}}%
  {\def\MF{\textsf{META}\-\textsf{FONT}}%
   \def\MP{\textsf{META}\-\textsf{POST}}%
   \def\FMF{\texttt{feyn}\textsf{MF}}%
   \def\ESK{\textsf{ESK}}}
%    \end{macrocode}
% Protect against certain obsolete versions of the |graphics| package:
%    \begin{macrocode}
\usepackage{graphics}[1994/12/15]
\usepackage{emp}
%    \end{macrocode}
%    \begin{macrocode}
\setlength{\parindent}{0pt}
\def\manindex#1{\SortIndex{#1}{#1}}
%<manual>\OnlyDescription
\EnableCrossrefs
\RecordChanges
\CodelineIndex
\DoNotIndex{\def,\gdef,\long,\let,\begin,\end,\if,\ifx,\else,\fi}
\DoNotIndex{\immediate,\write,\newwrite,\openout,\closeout,\typeout}
\DoNotIndex{\font,\jobname,\documentclass,\char,\catcode,\ }
\DoNotIndex{\CodelineIndex,\DocInput,\DoNotIndex,\EnableCrossrefs}
\DoNotIndex{\filedate,\filename,\fileversion,\logo,\manfnt}
\DoNotIndex{\NeedsTeXFormat,\ProvidesPackage,\RecordChanges,\space}
\DoNotIndex{\begingroup,\csname,\edef,\endcsname,\expandafter}
\DoNotIndex{\usepackage,\@ifundefined,\ignorespaces,\item,\leavevmode}
\DoNotIndex{\newcounter,\newif,\par,\parindent}
\DoNotIndex{\relax,\setcounter,\stepcounter,\the,\advance}
\DoNotIndex{\CurrentOption,\DeclareOption,\documentstyle}
\DoNotIndex{\endgroup,\global,\hfuzz,\LaTeX,\LaTeXe}
\DoNotIndex{\macrocode,\OnlyDescription,\PassOptionsToPackage}
\DoNotIndex{\ProcessOptions,\RequirePackage,\string,\textsf,\unitlength}
\DoNotIndex{\@bsphack,\@esphack,\@nameuse,\@ne,\active,\do,\dospecials}
\DoNotIndex{\errhelp,\errmessage,\ifcase,\IfFileExists,\includegraphics}
\DoNotIndex{\manindex,\SortIndex,\newcommand,\newtoks,\or,\origmacrocode}
\DoNotIndex{\alpha,\displaystyle,\frac,\sin,\texttt}
%    \end{macrocode}
% Cut the line breaking some slack for macro code which might contain
% long lines (it doesn't really hurt if they stick out a bit).
%    \begin{macrocode}
\let\origmacrocode\macrocode
\def\macrocode{\hfuzz 5em\origmacrocode}
\begin{document}
  \DocInput{emp.dtx}
\end{document}
%</driver>
%    \end{macrocode}
%
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
\endinput
Local Variables:
mode:LaTeX
fill-prefix:"% "
indent-tabs-mode:nil
change-log-default-name:"TODO"
page-delimiter:"^% %%%%%%%%%*\n"
End:
